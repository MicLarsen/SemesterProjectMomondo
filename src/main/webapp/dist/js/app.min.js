"use strict";function Routes($stateProvider,$urlRouterProvider,$urlMatcherFactoryProvider){$urlRouterProvider.otherwise("/"),$urlMatcherFactoryProvider.caseInsensitive(!0),$urlMatcherFactoryProvider.strictMode(!1),$stateProvider.state("home",{url:"/",templateUrl:"app/views/home/_home.html",controller:"HomeController",controllerAs:"vm"}).state("booking",{url:"/booking/:id",templateUrl:"app/views/booking/_booking.html",controller:"BookingController",controllerAs:"vm"})}function dataFactory($http,$q){function get(url){var q=$q.defer();return $http.get(url).then(function(response){q.resolve(response.data)},function(response){q.reject(response.data)}),q.promise}var data={flights:{}};return data.flights.getFlights=function(attrs){return get("mock/flights.json")},data.flights.getFlight=function(id){return get("mock/flight.json")},data.flights.sendReservation=function(data){return get("mock/reservation.json",data)},data}function airportService(){var airports=[{abbr:"SXF",city:"Berlin"},{abbr:"CPH",city:"Copenhagen"},{abbr:"STN",city:"London"},{abbr:"CDG",city:"Paris"},{abbr:"BCN",city:"Barcelona"}];this.getAirportFromAbbr=function(abbr){return airports.find(function(element){return element.abbr==abbr}).city},this.getAirports=function(){return airports}}function configureToastr(toastrConfig){angular.extend(toastrConfig,{positionClass:"toast-bottom-left",timeOut:2500})}function flightBooking(airportService){return{restrict:"E",templateUrl:"app/directives/flight-booking/flight-booking.html",scope:{data:"="},link:function(scope,element,attrs){scope.airportService=airportService}}}function flightResult(airportService){return{restrict:"E",templateUrl:"app/directives/flight-result/flight-result.html",scope:{data:"="},link:function(scope,element,attrs){scope.airportService=airportService}}}function BookingController(dataFactory,$stateParams,$state){var vm=this;vm.reservation={},vm.reservationSuccess=!1,vm.reservationError=!1,"undefined"!=typeof $stateParams.id&&null!=$stateParams.id&&""!=$stateParams.id||$state.go("home"),dataFactory.flights.getFlight($stateParams.id).then(function(response){vm.flight=response},function(){$state.go("home")}),vm.reservation.passengers=[{firstname:null,lastname:null}],vm.addPassenger=function(){vm.reservation.passengers.push({firstname:null,lastname:null})},vm.removePassenger=function(index){vm.reservation.passengers.length>1&&vm.reservation.passengers.splice(index,1)},vm.formValidated=function(){var val=!0;return vm.reservation.passengers.forEach(function(e){null!==e.firstname&&null!==e.lastname||(val=!1)}),"undefined"==typeof vm.reservation.reserveeName&&(val=!1),"undefined"==typeof vm.reservation.reserveeEmail&&(val=!1),"undefined"==typeof vm.reservation.reserveePhone&&(val=!1),console.log(vm.reservation),val},vm.sendReservation=function(){vm.reservationError=!1,vm.formValidated()&&dataFactory.flights.sendReservation(vm.reservation).then(function(){vm.reservationSuccess=!0},function(){vm.reservationError=!0})}}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}function HomeController(dataFactory,airportService,toastr){var vm=this;vm.searching=!1,vm.hasSearched=!1,vm.flights=[],vm.search={origin:null,destination:null,date:new Date,seats:1},vm.searchFlights=function(){vm.searching=!0,vm.hasSearched=!1,vm.flights=[],dataFactory.flights.getFlights(vm.search).then(function(response){response.map(function(x){var _vm$flights;return(_vm$flights=vm.flights).push.apply(_vm$flights,_toConsumableArray(x.flights))}),vm.searching=!1,vm.hasSearched=!0,toastr.success(vm.flights.length+" flights successfully fetched")},function(){vm.searching=!1,vm.hasSearched=!0,toastr.error("An error occured while requesting the flights from the API.")})},vm.getAirports=function(){return airportService.getAirports()},vm.testField=function(){console.log(vm.search.destination)}}angular.module("myApp",["ui.router","ui.bootstrap","ngAnimate","toastr"]),angular.module("myApp").config(Routes),angular.module("myApp").factory("dataFactory",dataFactory),dataFactory.$inject=["$http","$q"],angular.module("myApp").service("airportService",airportService),angular.module("myApp").config(configureToastr),angular.module("myApp").directive("flightBooking",flightBooking),flightBooking.$inject=["airportService"],angular.module("myApp").directive("flightResult",flightResult),flightResult.$inject=["airportService"],angular.module("myApp").controller("BookingController",BookingController),BookingController.$inject=["dataFactory","$stateParams","$state"],angular.module("myApp").controller("HomeController",HomeController),HomeController.$inject=["dataFactory","airportService","toastr"];